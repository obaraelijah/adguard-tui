name: Release ðŸš€

on:
  workflow_dispatch:
  push:
    branches:
      - main
      
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep "^version" Cargo.toml | awk '{print $3}' | tr -d '"')

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy

      - name: Install cargo-make
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-make

      - name: Build for Linux, MacOS and Windows
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }} 
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/adguard-tui-linux
          asset_name: adguard-tui-linux
          asset_content_type: application/octet-stream

      - name: Upload MacOS Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/adguard-tui-macos
          asset_name: adguard-tui-macos
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/adguard-tui-windows.exe
          asset_name: adguard-tui-windows.exe
          asset_content_type: application/octet-stream