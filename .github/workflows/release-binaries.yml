name: Release ðŸš€

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  release-linux:
    name: Release Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep "^version" Cargo.toml | awk '{print $3}' | tr -d '"')

      - name: Install dependencies
        run: sudo apt-get update -y && sudo apt-get install -y musl-tools

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          
      - name: Install target
        run: rustup target add x86_64-unknown-linux-musl
        
      - name: Build for Linux
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target=x86_64-unknown-linux-musl

      - name: Upload Linux Binary
        uses: actions/upload-artifact@v2
        with:
          name: adguard-tui-linux
          path: ./target/x86_64-unknown-linux-musl/release/adguard-tui

  release-macos:
    name: Release MacOS
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep "^version" Cargo.toml | awk '{print $3}' | tr -d '"')

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build for MacOS
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload MacOS Binary
        uses: actions/upload-artifact@v2
        with:
          name: adguard-tui-macos
          path: ./target/release/adguard-tui

  release-windows:
    name: Release Windows
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo "::set-output name=VERSION::$(grep '^version' Cargo.toml | awk '{print $3}' | tr -d '"')"

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build for Windows
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Upload Windows Binary
        uses: actions/upload-artifact@v2
        with:
          name: adguard-tui-windows
          path: ./target/release/adguard-tui.exe

  create-release:
    name: Create Release
    needs: [release-linux, release-macos, release-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(grep "^version" Cargo.toml | awk '{print $3}' | tr -d '"')

      - name: Update or Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body_path: ./.github/CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}

      - name: Download Linux Binary
        uses: actions/download-artifact@v2
        with:
          name: adguard-tui-linux
          path: ./target/x86_64-unknown-linux-musl/release/

      - name: Download MacOS Binary
        uses: actions/download-artifact@v2
        with:
          name: adguard-tui-macos
          path: ./target/release/

      - name: Download Windows Binary
        uses: actions/download-artifact@v2
        with:
          name: adguard-tui-windows
          path: ./target/release/

      - name: Upload Linux Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/x86_64-unknown-linux-musl/release/adguard-tui
          asset_name: adguard-tui-linux
          asset_content_type: application/octet-stream

      - name: Upload MacOS Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/adguard-tui
          asset_name: adguard-tui-macos
          asset_content_type: application/octet-stream

      - name: Upload Windows Binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/release/adguard-tui.exe
          asset_name: adguard-tui-windows.exe
          asset_content_type: application/octet-stream