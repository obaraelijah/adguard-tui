name: Build + Publish Docker Image 🐳

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'  

env:
  IMAGE_NAME: adguard-tui
  DOCKER_USER: obaraelijah
  GHCR_REGISTRY: ghcr.io
  DOCKERHUB_REGISTRY: docker.io

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: 
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - armv7-unknown-linux-musleabihf

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Extract tag name
        id: extract_tag
        shell: bash
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "GIT_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "GIT_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKERHUB_REGISTRY }}
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.GHCR_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}-${{ matrix.target }}
            ${{ env.DOCKERHUB_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}-${{ matrix.target }}

  merge-tags:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create and push manifest lists
        run: |
          docker manifest create ${{ env.GHCR_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }} \
            ${{ env.GHCR_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}-x86_64-unknown-linux-musl \
            ${{ env.GHCR_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}-aarch64-unknown-linux-musl \
            ${{ env.GHCR_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}-armv7-unknown-linux-musleabihf
          
          docker manifest create ${{ env.DOCKERHUB_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }} \
            ${{ env.DOCKERHUB_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}-x86_64-unknown-linux-musl \
            ${{ env.DOCKERHUB_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}-aarch64-unknown-linux-musl \
            ${{ env.DOCKERHUB_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}-armv7-unknown-linux-musleabihf
          
          docker manifest push ${{ env.GHCR_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}
          docker manifest push ${{ env.DOCKERHUB_REGISTRY }}/${{ env.DOCKER_USER }}/${{ env.IMAGE_NAME }}:${{ env.GIT_TAG }}